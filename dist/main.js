(()=>{"use strict";class t{static counter=0;constructor(e="New Task",s="New Task",i=new Date,o="L",r=[]){this._title=e,this._description=s,this._dueDate=i,this._priority=o,this._notes=r,this._completionStatus=!1,this._id=++t.counter}get title(){return this._title}set title(t){this._title=t}get description(){return this._description}set description(t){this._description=t}get priority(){return this._priority}set priority(t){this._priority=t}get notes(){return this._notes}editNote(t,e){this._notes[t]=e}addNote(t){this._notes.push(t)}removeNote(t){this._notes.splice(t,1)}completeTodo(){this._completionStatus=!0}}const e=t;class s{static projects=[];static counter=0;constructor(t="New Project",e="New Project"){this._name=t,this._description=e,this._tasks=[],s.projects.push(this),this._id=++s.counter}static getProjects(){return s.projects}static deleteProject(t){s.projects=s.projects.filter((e=>e._id!=t))}static deleteTodo(t){s.projects.forEach((e=>{e._tasks=e._tasks.filter((e=>e._id!=t))}))}get name(){return this._name}set name(t){this._name=t}get description(){return this._description}set description(t){this._description=t}addTask(t){this._tasks.push(t)}}const i=s,o=function(t){document.querySelector(".main-subtitle").textContent=t.target.textContent},r=new e("aaaaaa"),n=new e,c=new e;console.log(n);const a=new i,d=new i,h=new i,l=new i;a.addTask(r),a.addTask(n),a.addTask(c),d.addTask(r),h.addTask(r),l.addTask(r),console.log(i.getProjects()),i.deleteTodo(1),i.deleteProject(2),console.log(i.getProjects()),document.querySelectorAll(".chronological > li").forEach((t=>{t.addEventListener("click",o)}))})();